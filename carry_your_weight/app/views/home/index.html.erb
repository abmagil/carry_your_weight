<!DOCTYPE html>
<html>
<head>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>

<body>
  <div id="chart"></div>
  <script>
    //fake server
    subscribers = [];
    var commitDocument = function() {
      return {
        "commit": "bd2cbd1455df71765e9efb55ea17dd1cc545924f",
        "time": Date.now(),
        "author_lines": {
          "Liz": 4 + Math.floor((Math.random() * 10) +1 ),
          "Magil": 5 + Math.floor((Math.random() * 10) + 1),
          "Person_3": 4 + Math.floor((Math.random() * 10) +1)
        }
      }
    }
    setInterval(function() {
      subscribers.forEach(function(e) {
        var event = new CustomEvent('getDocument', {detail: commitDocument});
        subscribers.forEach(function(elem) {
          elem.dispatchEvent(event)
        })
      })
    }, 1000);
  </script>
  <script>
  //client-side rendering
    subscribers.push(this);
    var width = 360;
    var height = 360;
    var radius = Math.min(width, height) / 2;
    var color = d3.scale.category20c()
    var svg = d3.select('#chart')
      .append('svg')
      .attr('width', width)
      .attr('height', height)
      .append('g')
      .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')');
    var arc = d3.svg.arc().outerRadius(radius);
    var pie = d3.layout.pie()
      .value(function(d) {return d.lines;})
      .sort(null);
    var legend = d3.select("#chart").append("svg")
      .attr("class", "legend")
      .selectAll("g");
    this.addEventListener('getDocument', function(e) {
      commitDetail = (e.detail.call().author_lines);
      var dataset = [];
      for (var person in commitDetail) {
        dataset.push({person: person, lines: commitDetail[person]});
      }
      var path = svg.datum(dataset).selectAll('path')
        .data(pie)
        .attr('d', arc)
        .enter()
          .append('path')
          .attr('d', arc)
          .attr('fill', function(d, i) {
            // console.log(d.data);
            return color(d.data.person);
          });

    legend
      .data(dataset)
      .enter().append("g")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

    legend
      .data(dataset)
      .enter()
        .append("rect")
        .attr("width", 18)
        .attr("height", 18)
        .attr("y", function(d, i) {return i*20})
        .style("fill", function(d, i) { return color(d.person); });

    legend
      .data(dataset)
      .enter()
        .append("text")
        .attr("x", 24)
        .attr("y", function(d, i) {return 9 + i*20})
        .attr("dy", ".35em")
        .text(function(d) { return d.person; });
    });
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <script>
    var socket, host;
    host = "ws://localhost:3001";

    function connect() {
      try {
        socket = new WebSocket(host);

        addMessage("Socket State: " + socket.readyState);

        socket.onopen = function() {
          addMessage("Socket Status: " + socket.readyState + " (open)");
        }

        socket.onclose = function() {
          addMessage("Socket Status: " + socket.readyState + " (closed)");
        }

        socket.onmessage = function(msg) {
          addMessage("Received: " + msg.data);
        }
      } catch(exception) {
        addMessage("Error: " + exception);
      }
    }

    function send() {
      var text = $("#message").val();
      if (text == '') {
        addMessage("Please Enter a Message");
        return;
      }

      try {
        socket.send(text);
        addMessage("Sent: " + text)
      } catch(exception) {
        addMessage("Failed To Send")
      }

      $("#message").val('');
    }

    function addMessage(msg) {
      console.log("" + msg + "");
    }

    $("#disconnect").click(function() {
      socket.close()
    });

    $('#send').click(function(event) {
      send();
    });


    $(function() {
      connect();
    });
  </script>

</body>
</html>
